ALTER:

1)
ALTER TABLE marks 
ADD COLUMN created_at DATETIME DEFAULT NOW(),
ADD COLUMN updated_at DATETIME DEFAULT NOW();

2)
ALTER TABLE students 
ADD COLUMN created_at TIME,
ADD COLUMN updated_at TIME;

3)
ALTER TABLE medals 
ADD COLUMN created_at TIME,
ADD COLUMN updated_at TIME;

4)
update marks set quarterly=0 where quarterly IS NULL;
update marks set half_yearly=0 where half_yearly IS NULL;
update marks set annual=0 where annual IS NULL;

ALTER TABLE marks
MODIFY COLUMN quarterly int(11) NOT NULL,
MODIFY COLUMN half_yearly int(11) NOT NULL,
MODIFY COLUMN annual int(11) NOT NULL;

INSERTION:

DELIMITER $$
CREATE TRIGGER student_insert 
    BEFORE INSERT ON students
    FOR EACH ROW 
BEGIN
    SET
     NEW.created_at = NOW(),
        NEW.updated_at = NOW(); 
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER mark_insert 
    BEFORE INSERT ON marks
    FOR EACH ROW 
BEGIN
    SET
     NEW.created_at = NOW(),
        NEW.updated_at = NOW(); 
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER medal_insert 
    BEFORE INSERT ON medals
    FOR EACH ROW 
BEGIN
    SET
     NEW.created_at = NOW(),
        NEW.updated_at = NOW(); 
END$$
DELIMITER ;

UPDATION:

DELIMITER $$
CREATE TRIGGER student_update 
    BEFORE UPDATE ON students
    FOR EACH ROW 
BEGIN
    SET NEW.updated_at = NOW(); 
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER mark_update 
    BEFORE UPDATE ON marks
    FOR EACH ROW 
BEGIN
    SET NEW.updated_at = NOW(); 
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER medal_update 
    BEFORE UPDATE ON medals
    FOR EACH ROW 
BEGIN
    SET NEW.updated_at = NOW(); 
END$$
DELIMITER ;



EXERCISE 1:
CREATE TABLE students_summary
(
	id bigint(19) REFERENCES students(ID), 
	name varchar(100),
	year int(11),
	percentage int(11),
	no_of_medals int
);	

INSERT INTO students_summary 

SELECT t1.id,t1.name,t1.year,t2.annual,t1.medals
FROM 
    (SELECT students.id,name,count(medal_won) as medals, medals.year FROM students INNER JOIN medals on students.id=medals.student_id 
GROUP BY name,medals.year) t1
INNER join
    (SELECT name,sum(IFNULL(quarterly,0))/5 as quarterly,sum(IFNULL(half_yearly,0))/5 as half,sum(IFNULL(annual,0))/5 as annual,year,grade FROM students INNER JOIN marks ON students.id=marks.student_id GROUP BY name,year) t2
on
    t1.name = t2.name and t1.year=t2.year;

EXERCISE 2:

1)
ALTER TABLE marks 
ADD COLUMN average float(5,2);

update marks set avarage=(quarterly+half_yearly+annual)/3 ;

INSERTION TRIGGER:
DELIMITER $$
CREATE TRIGGER mark_insert 
    BEFORE INSERT ON marks
    FOR EACH ROW 
BEGIN
    SET
     NEW.average=(NEW.quarterly+NEW.half_yearly+NEW.annual)/3,
     NEW.created_at = NOW(),
        NEW.updated_at = NOW(); 
END$$
DELIMITER ;

UPDATION TRIGGER:

DELIMITER $$
CREATE TRIGGER mark_update 
    BEFORE UPDATE ON marks
    FOR EACH ROW 
BEGIN
    SET NEW.average=(NEW.quarterly+NEW.half_yearly+NEW.annual)/3,
    NEW.updated_at = NOW(); 
END$$
DELIMITER ;

2)

ALTER TABLE medals
ADD COLUMN medal_received varchar(10);

DELIMITER $$
 CREATE TRIGGER medal_update 
 BEFORE UPDATE ON medals 
 FOR EACH ROW 
 BEGIN
     SET new.medal_received = new.medal_won;
     SET NEW.updated_at = NOW();
 END
 $$
 DELIMITER ;

 UPDATE medals SET id=id;

ALTER TABLE medals
DROP COLUMN medal_won;




LOAD DATA LOCAL INFILE '/Users/bharanidharan/Training/phone.csv' into TABLE PHONE
FIELDS TERMINATED BY ','  
LINES TERMINATED BY '\n'
IGNORE 1 LINES;

CREATE TABLE PHONE ( name varchar(30), address varchar(50), mobile varchar(12), home varchar(12), work varchar(12) );
